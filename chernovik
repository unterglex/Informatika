''' РАНДОМ '''

from random import seed, randint
seed(13)
x1=randint(1,3)
x2=randint(1,28)
x3=randint(1,6)
print(x1,x2,x3)
2 10 6

import random
from math import sqrt
import matplotlib.pyplot as plt

p = 0.8
xMin1, yMin1 = 0, 0
xMax1, yMax1 = 50, 50
xMin2, yMin2 = 25, 25
xMax2, yMax2 = 75, 75
k = 3
pointsCount1 = 50
pointsCount2 = 50
x = []
y = []
for i in range(pointsCount1):
    x.append([random.uniform(xMin1, xMax1), random.uniform(yMin1, yMax1)])
    y.append(1)
for i in range(pointsCount2):
    x.append([random.uniform(xMin2, xMax2), random.uniform(yMin2, yMax2)])
    y.append(2)


def train_test_split(x, y, p):
    x_train = []
    y_train = []
    x_test = []
    y_test = []
    for i in range(round((pointsCount1 + pointsCount2) * p)):
        x_train.append(x[i])
        y_train.append(y[i])
    for j in range(round((pointsCount1 + pointsCount2) * (1 - p))):
        x_test.append(x[j])
        y_test.append(y[j])
    return x_train, x_test, y_train, y_test


x_train, x_test, y_train, y_test = train_test_split(x, y, p)

def fit(x_train, y_train, x_test, k):
    import heapq
    o12 = []
    x12 = []
    r=[]
    y_predict = []
    for i in range(len(x_test)):
        for j in range(len(x_train)):
            r.append(((x_train[j][1])-x_test[i][0])**2+(x_train[j][1]-x_test[i][1])**2)**0,5
        a=heapq.nsmallest(k,r)
        indi = []
        for i in range(len(a)):
            indi.append(r.index(a[i]))
            if y_train[indi[i]]==1:
                o12+=1
            else: 
                x12+=1
        if o12>x12:
            y_predict.append(1)
        else: 
            y.predict.apppend(2)
        print(indi)
    return(y_predict)

print(fit(x_train, y_train,x_test, k))
sovp=0
for i in range(len(y_predict)):
    if y_predict[i]==y_test[i]:
        sovp+=1
accuracy=sovp/len(y_predict)
print(accuracy)
